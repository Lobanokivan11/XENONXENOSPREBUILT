name: build

on:
  schedule:
    - cron: "0 * * * *"
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            c_compiler: clang-cl
            cpp_compiler: clang-cl
          - os: ubuntu-24.04
            c_compiler: clang
            cpp_compiler: clang++
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Prepare (Linux)
      if: runner.os == 'Linux'
      run: bash clone.sh

    - name: Prepare (Windows)
      if: runner.os == 'Windows'
      run: .\clone.bat
      shell: cmd

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: .\build-win.bat
      shell: cmd

    - name: Build (Linux)
      if: runner.os == 'Linux'
      run: bash build-linux.sh
    - name: UPLOAD ARTIFACTS (Linux)
      uses: actions/upload-artifact@v4
      if: runner.os == 'Linux'
      with:
        name: artifacts-linux
        path: |
          prebuilt-linux.zip
    - name: UPLOAD ARTIFACTS (Windows)
      uses: actions/upload-artifact@v4
      if: runner.os == 'Windows'
      with:
        name: artifacts-windows
        path: |
          prebuilt-windows.zip
  release:
     runs-on: ubuntu-24.04
     permissions:
       contents: write
     needs: [build]
     steps:
     - name: prepare ARTIFACTS (Windows)
       uses: actions/download-artifact@v4
       with: 
         name: artifacts-windows
         path: artifacts
     - name: prepare ARTIFACTS (Linux)
       uses: actions/download-artifact@v4
       with: 
         name: artifacts-linux
         path: artifacts
     - name: UPLOAD ARTIFACTS
       uses: svenstaro/upload-release-action@v2
       with:
         repo_token: ${{ secrets.GITHUB_TOKEN }}
         file: ./artifacts/*
         tag: github_run
         overwrite: true
         body: "XenonRecomp And XenosRecomp Binaries"
         file_glob: true
     - name: Actions Ntfy
       run: |
         curl \
          -u ${{ secrets.NTFY_CRED }} \
          -H "Title: XenonRecomp and XenosRecomp Is Updated" \
          -H "Content-Type: text/plain" \
          -d $'Repo: ${{ github.repository }}\nCommit: ${{ github.sha }}\nRef: ${{ github.ref }}\nStatus: ${{ job.status}}' \
          ${{ secrets.NTFY_URL }}
